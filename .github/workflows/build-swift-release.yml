name: Build Swift Release

on:
  push:
    branches: [ "feature/**" ]
  release:
    types: [published]

env:
  SWIFT_VERSION: 6.0.3
  SWIFT_TAG: swift-6.0.3-RELEASE
  SWIFT_WORKSPACE_CACHE: swift-6.0.3-workspace
  #SWIFT_VERSION: ${{ github.event.release.tag_name }}
  #SWIFT_TAG: swift-${{ github.event.release.tag_name }}-RELEASE
  #SWIFT_WORKSPACE_CACHE: swift-${{ github.event.release.tag_name }}-workspace

jobs:
  fetch-sources:
    name: Fetch Swift Sources
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/checkout-swift
      name: "Restore or Checkout: ${{ env.SWIFT_TAG }}"
      with:
        swift-tag: ${{ env.SWIFT_TAG }}
        swift-workspace-cache: ${{ env.SWIFT_WORKSPACE_CACHE }}

  build-for-distribution:
    strategy:
      matrix:
        distribution: ["debian-bullseye", "debian-bookworm", "ubuntu-focal", "ubuntu-jammy", "ubuntu-noble"]
    name: Build Swift for Distribution
    runs-on: ubuntu-latest
    needs: [fetch-sources]
    steps:
    - uses: actions/checkout@v4
    - name: Generate Builder Container
      shell: bash
      run: |
        source ./swift-builder/swift-builder-common
        ./swift-builder/build-container.sh
    - uses: ./.github/actions/build-for-distribution
      name: "Build & Publish Swift: ${{ env.SWIFT_TAG }}"
      with:
        swift-tag: ${{ env.SWIFT_TAG }}
        swift-workspace-cache: ${{ env.SWIFT_WORKSPACE_CACHE }}
        distribution: ${{ matrix.distribution }}
        builder-tag: ${{ env.SWIFT_VERSION }}
